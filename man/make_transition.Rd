% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vis-make_transition.r
\name{make_transition}
\alias{make_transition}
\title{Create transition layer from spatial object.}
\usage{
make_transition(poly, res, receiver_points = NULL)
}
\arguments{
\item{poly}{A spatial polygon object of class
[SpatialPolygonsDataFrame][SpatialPolygons][terra::SpatVector] or a \link[sf:sf]{sf::sf()} object
with a geometry column of polygon and/or multipolygon objects.}

\item{res}{two element vector that specifies the x and y dimension of output
raster cells. Units are same as \code{poly} crs. May be calculated from desired
resolution in meters using \code{\link[=scale_meters_to_degrees]{scale_meters_to_degrees()}}.}

\item{receiver_points}{Object containing coordinates of receiver locations.
Must be of class \code{SpatialPointsDataFrame}, \code{SpatialPoints}, \code{sf}, \code{SpatVector}
\code{glatos_receivers}, or \code{glatos_detections}.}
}
\value{
A list with three elements:
\describe{
\item{transition}{a geo-corrected transition raster layer where land = 0
and water = 1
(see \code{\link[gdistance:Transition-classes]{gdistance::Transition}})}
\item{rast}{rasterized input layer of class \code{raster}}}
\item{pip}{table of receivers not within polygon input layer}
}
\description{
Create transition layer for \code{\link[=interpolate_path]{interpolate_path()}} spatial object.
}
\details{
\code{make_transition} uses \link[terra:rasterize]{terra::rasterize} to convert a polygon
shapefile into a raster layer and geo-corrected transition layer
\code{\link[=interpolate_path]{interpolate_path()}}. Raster cell values on land equal 0, cells in water
equal 1. Output is a three-object list containing the raster layer, transition layer,
and a data-frame of receiver points that do not fall inside of the spatial polygon.

If \code{receiver_points} is provided, any receiver not in water is identified and included in output.

output transition layer is corrected for projection distortions
using \code{gdistance::geoCorrection}.  Adjacent cells are connected by 16
directions and transition function returns 0 (land) for movements between
land and water and >0 for all over-water movements.

Note that this function underwent breaking changes between 0.7.3 and
0.8.0 (uses \code{terra::rasterize} instead of \code{gdalUtilities::gdal_rasterize} see
NEWS).
}
\examples{

# Example 1 - read from sf polygon object
# use example polygon for Great lakes

# make_transition layer
tst <- make_transition(great_lakes_polygon, res = 0.1)

\dontrun{
# plot raster layer (notice water = 1, land = 0)
raster::plot(tst$rast)

# compare to polygon
plot(sf::st_geometry(great_lakes_polygon), add = TRUE)
}

# Example 2 - read from ESRI Shapefile and include receiver file
# to account for any receivers outside of great lakes polygon

# path to polygon shapefile
poly <- system.file("extdata", "shoreline.zip", package = "glatos")
poly <- sf::st_read(paste0("/vsizip/", poly))

# read in glatos receivers object
rec_file <- system.file("extdata", "sample_receivers.csv",
  package = "glatos"
)
recs <- read_glatos_receivers(rec_file)


# make_transition layer (roughly 500 m res)
tst <- make_transition(poly, res = c(0.065, 0.046), receiver_points = recs)

# list points outside of polygons
tst$pip

<<<<<<< HEAD
# Example 3- transition layer of Lake Huron only with receivers
=======

# Example 4- transition layer of Lake Huron only with receivers
>>>>>>> 3ebe204eda25e23fe535186fd65397a57f206679

# transform to great lakes projection
poly <- sf::st_transform(great_lakes_polygon, crs = 3175)

# set attribute-geometry relationship to constant.
# this avoids error when cropping
sf::st_agr(poly) <- "constant"

# crop Great lakes polygon file
poly <- sf::st_crop(
  x = poly, xmin = 829242.55, ymin = 698928.27,
  xmax = 1270000.97, ymax = 1097196.15
)

# read in glatos receivers object
rec_file <- system.file("extdata", "sample_receivers.csv",
  package = "glatos"
)
recs <- read_glatos_receivers(rec_file)

# extract receivers in "HECWL" project
# all receiver stations except one is in Lake Huron
recs <- recs[recs$glatos_project == "HECWL", ]

# remove two stations not in Lake Huron
recs <- recs[!recs$glatos_array \%in\% c("MAU", "LVD"), ]

# create slightly higher resolution transition layer
#   (note that res in in meters here because crs is 3175)
tst1 <- make_transition(poly, res = 5000, receiver_points = recs)

\dontrun{
# plot raster layer
raster::plot(tst1$rast)

recs <- sf::st_as_sf(recs, coords = c("deploy_long", "deploy_lat"), crs = 4326)
recs <- sf::st_transform(recs, 3175)
plot(sf::st_geometry(recs),
  add = TRUE, col = "red", pch = 20
)

# plot transition layer
raster::plot(raster::raster(tst1$transition), add = TRUE)

# list receivers on land
tst1$pip
}

}
\author{
Todd Hayden, Chris Holbrook
}
